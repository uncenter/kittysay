name: Release Please

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  build:
    uses: ./.github/workflows/build.yml

  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
    outputs:
      binary_release_created: ${{ steps.release.outputs['crates/kittysay--release_created'] }}
      binary_tag_name: ${{ steps.release.outputs['crates/kittysay--tag_name'] }}
      library_release_created: ${{ steps.release.outputs['crates/kittycore--release_created'] }}

  release-binary:
    runs-on: ubuntu-latest
    needs: [build, release-please]
    if: ${{ needs.release-please.outputs.binary_release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2

      - name: Publish
        run: cargo publish --verbose --locked --no-verify --package kittysay
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.binary_tag_name }} artifacts/**/*

  release-library:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.library_release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2

      - name: Publish
        run: cargo publish --verbose --locked --no-verify --package kittycore
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
